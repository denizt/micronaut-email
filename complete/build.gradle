plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

version "0.1"
group "example"

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    //tag::awsses[]
    implementation 'com.amazonaws:aws-java-sdk-ses:1.11.285'
    //end::awsses[]
    //tag::sendgrid[]
    implementation 'com.sendgrid:sendgrid-java:4.1.2'
    //end::sendgrid[]

    //tag::validator[]
    implementation 'io.micronaut:micronaut-validation'
    //end::validator[]

    //tag::spock[]
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    //end::spock[]

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.0"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-junit5"
}

test.classpath += configurations.developmentOnly

mainClassName = "example.micronaut.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

run {
    systemProperty "sendgrid.apikey", System.getProperty('sendgrid.apikey')
    systemProperty "sendgrid.fromemail", System.getProperty('sendgrid.fromemail')
    systemProperty "aws.accesskeyid", System.getProperty("aws.accesskeyid")
    systemProperty "aws.secretkey", System.getProperty("aws.secretkey")
    systemProperty "aws.region", System.getProperty("aws.region")
    systemProperty "aws.sourceemail", System.getProperty("aws.sourceemail")
}

test {
    systemProperty "sendgrid.apikey", System.getProperty('sendgrid.apikey')
    systemProperty "sendgrid.fromemail", System.getProperty('sendgrid.fromemail')
    systemProperty "aws.accesskeyid", System.getProperty("aws.accesskeyid")
    systemProperty "aws.secretkey", System.getProperty("aws.secretkey")
    systemProperty "aws.region", System.getProperty("aws.region")
    systemProperty "aws.sourceemail", System.getProperty("aws.sourceemail")
}

apply from: "${rootProject.projectDir}/gradle/testVerbose.gradle"
